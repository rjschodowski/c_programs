/*
This is my third (and finally, successful!) attempt. Here is a recap of what I discovered from my previous attempts:

1) There is a much easier way of solving this problem with the use of a function taking in an array, class size, and answer (sum) parameters.
   It simply makes the program easier to read and it cuts out unnecessary extra work.
2) placement of the array parameter within the function is critical
3) put your parenthesis around the function call when dealing with arrays (pointers)
4) it's better to set your counter to 0 in this case, and then use pointer arithmetic
   to increment student number starting at number 1 (instead of 0). Whenever I set it
   at 1, I'd get garbage data for my calculation.
*/

#include <stdio.h>

double sum_grades(double arr[], int class_size, double sum_of_grades)
{
  for(int i = 0; i < class_size; i++)
    {
      sum_of_grades += arr[i];
    }
  return sum_of_grades/class_size;
}

int main() {
  int class_size;
  int sum_of_grades;
  
  printf("Student Class Average Calculator\n");
  printf("*****************************************\n");
  printf("Enter your student class size: ");
  scanf("%d", &class_size);

  double arr[class_size];

  for(int i = 0; i < class_size; i++)
    {
      printf("Enter student number %d\'s grade: ", i+1);
      scanf("%lf", &arr[i]);
    }
  printf("The avg of the student grades are %.2lf", (sum_grades(arr, class_size, sum_of_grades)));
  return 0;
}
