// 4/14/22 CodeGym! Collaboration: Jeffrey Sweeney, Lloyd Peltier, Valerie Rackeley, R.J. Schodowski, Marshall Choinski

/*
*****************************************************************
Problem

Write a C program to find the position of a target value within a sorted array using Binary search. Go to the editor
Binary Search : In computer science, a binary search or half-interval search algorithm finds the position of a target
value within a sorted array. The binary search algorithm can be classified as a dichotomies divide-and-conquer search
algorithm and executes in logarithmic time.

*****************************************************************
*/

#include<stdio.h>
#define SIZE 10
int bin_search (int target, int arr[]);
int main()
{
    int arr [SIZE];
    int targ = 3;
    for (int i=0;i<SIZE;i++)
    {
        arr[i] = i * 2;
    }
    int index = bin_search (targ, arr);
    
    if (index == -1)
    {
        printf ("%d not found!\n", targ);
    }
    else 
    {
        printf ("%d found at index %d\n", targ, index);
    }
}

int bin_search (int target, int arr[])
{
    int low = 0;
    
    int high = SIZE - 1;
    int mid = SIZE / 2;
    while (arr[mid] != target && low < high)
    {
        if (target < arr[mid])
        {
            high = mid - 1;
            mid = (high + low) / 2;
        }
        else if (target > arr[mid])
        {
            low = mid + 1;
            mid = (high + low) / 2;
        }
        else
        {
            break;
        }
    }
    if (arr[mid] == target)
    {
        return mid;
    }
    else 
    {
        return -1;
    }
}
